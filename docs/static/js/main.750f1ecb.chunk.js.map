{"version":3,"sources":["components/Quote.js","App.js","index.js"],"names":["QuoteWrapper","styled","div","Quote","quote","author","Wrapper","Button","button","App","useState","setQuote","requestAPI","a","fetch","api","json","phrase","useEffect","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIMA,EAAeC,IAAOC,IAAV,spBA4CHC,EAXD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,eAACJ,EAAD,WACE,6BAAKI,EAAMA,QACX,4BAAIA,EAAMC,aCrCVC,EAAUL,IAAOC,IAAV,uHAOPK,EAASN,IAAOO,OAAV,mbAyDGC,MApCf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KAYMC,EAAU,uCAAG,8BAAAC,EAAA,sEACCC,MAChB,uDAFe,cACXC,EADW,gBAKIA,EAAIC,OALR,OAKXC,EALW,OAMjBN,EAASM,EAAO,IANC,2CAAH,qDAchB,OAJAC,qBAAU,WACRN,MACC,IAGD,eAACN,EAAD,WACE,cAAC,EAAD,CAAOF,MAAOA,IACd,cAACG,EAAD,CAAQY,QAASP,EAAjB,2BC1DNQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.750f1ecb.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst QuoteWrapper = styled.div`\n  padding: 3rem;\n  border-radius: 0.5rem;\n  background-color: #fff;\n  max-width: 800px;\n\n  @media (min-width: 992px) {\n    margin-top: 10rem;\n  }\n  h1 {\n    font-family: Arial, Helvetica, sans-serif;\n    text-align: center;\n    position: relative;\n    padding-left: 4rem;\n    &::before {\n      content: open-quote;\n      font-size: 10rem;\n      color: black;\n      position: absolute;\n      left: -1rem;\n      top: -2rem;\n    }\n  }\n  p {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 1.4rem;\n    font-weight: bold;\n    text-align: right;\n    color: #666;\n    margin-top: 2rem;\n  }\n`;\n\nconst Quote = ({ quote }) => {\n  return (\n    <QuoteWrapper>\n      <h1>{quote.quote}</h1>\n      <p>{quote.author}</p>\n    </QuoteWrapper>\n  );\n};\nQuote.propTypes = {\n  quote: PropTypes.object.isRequired,\n};\nexport default Quote;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport Quote from './components/Quote';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 5rem;\n`;\n\nconst Button = styled.button`\n  background: -webkit-linear-gradient(\n    top left,\n    #007d35 0%,\n    #007d35 40%,\n    #0f574e 100%\n  );\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #fff;\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size: 2rem;\n  border: 2px solid black;\n  transition: background-size 0.8s ease;\n\n  :hover {\n    cursor: pointer;\n    background-size: 400px;\n  }\n`;\nfunction App() {\n  //\n  const [quote, setQuote] = useState({});\n  // USUAL FETCH\n  // const requestAPI = () => {\n  //   const api = fetch('https://breaking-bad-quotes.herokuapp.com/v1/quotes');\n  //   const phrase = api.then((response) => response.json());\n  //   phrase.then((result) => console.log(result));\n  // };\n\n  // ASYNC/AWAIT FETCH\n  // with async/await we stop code execution until we receive data,\n  // we fulfill the promise and .then() are not necessary now,\n  // so our code is cleaner and smarter\n  const requestAPI = async () => {\n    const api = await fetch(\n      'https://breaking-bad-quotes.herokuapp.com/v1/quotes'\n    );\n    // promise\n    const phrase = await api.json();\n    setQuote(phrase[0]);\n  };\n\n  // load a quote for the first time\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n  return (\n    <Wrapper>\n      <Quote quote={quote} />\n      <Button onClick={requestAPI}>Get quote</Button>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}